#+TITLE:  note about instar
#+AUTHOR: 謝宇恆 / XIE Yuheng
#+EMAIL:  xyheme@gmail.com

* note
  * instars are written for windows 32bit version of the interpreter
* 1st-instar
  * indirect-threaded-code interpreter
    1. macro about argument_stack & return_stack
    2. macro about jo & jojo
    3. macro about next
    4. the way to do memory allocation
    5. begin_to_interpret_threaded_code
    6. little_test
* 2ed-instar
  * instruction as special primitive function
    1. literal
    2. address
  * and primitive functions about
    1. the stack
    2. bool
    3. fixnum
    4. memory
  * and taca for explicit tail-call
  * false?branch and taca are needed for "power"
* 3rd-instar
  * primitive function about io
    1. write_byte
    2. read_byte
* 4th-instar
  * more function about io
    1. about word
    2. about string
    3. about number
  * more function
    1. jo
    2. char
    3. buffer
  * more in epilog
    1. last_link
  * function about dictionary
    1. find
    2. execute-word
  * basic-REPL as postfix-notation function executer
    1. basic-REPL
* 5th-instar
  * type of jo
  * more in epilog
    1. *current-free-address,primitive-string-heap*
  * colon semicolon
    1. ":" and ";" are used to read a string of words for compiler
       [looks like bar-ket but special]
    2. comment is handled here
       "<< >>" as the only way to do comment
  * compiler
    * make-jojo
      and macro for make-jojo
      1. macro system
      2. exception handling system
    * function about definition
      which leave data into memory
